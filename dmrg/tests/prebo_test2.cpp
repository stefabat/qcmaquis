/**
 * @file
 * @copyright This code is licensed under the 3-clause BSD license.
 *            Copyright ETH Zurich, Laboratory of Physical Chemistry, Reiher Group.
 *            See LICENSE.txt for details.
 */

#define BOOST_TEST_MAIN

#include <boost/test/included/unit_test.hpp>
#include "utils/fpcomparison.h"
#include "utils/io.hpp" // has to be first include because of impi
#include <iostream>

#include "maquis_dmrg.h"


// Test 1: HeHHe+ with d=3.4907021 Bohr, singlet, STO-3G basis set for electrons and PB3-D (s-orbitals only) for p+,
// FCI, integrals generated by Blueberry
BOOST_AUTO_TEST_CASE( PreBO_Test2 )
{

    DmrgParameters p;

    const maquis::integral_map<double, chem::Hamiltonian::PreBO> integrals {
        {{-1,-1,-1,-1,-1,-1,-1,-1,},1.145901278714102},
        {{0,0,0,0,-1,-1,-1,-1,},-2.451508889071943},
        {{0,0,0,2,-1,-1,-1,-1,},0.340200924167138},
        {{0,1,0,1,-1,-1,-1,-1,},-2.483740534490908},
        {{0,2,0,0,-1,-1,-1,-1,},0.340200924167138},
        {{0,2,0,2,-1,-1,-1,-1,},-0.9472232796119956},
        {{1,0,1,0,-1,-1,-1,-1,},2.30233235666604},
        {{1,0,1,1,-1,-1,-1,-1,},-0.009007309958580123},
        {{1,0,1,2,-1,-1,-1,-1,},7.287670993871842e-05},
        {{1,1,1,0,-1,-1,-1,-1,},-0.009007309958579485},
        {{1,1,1,1,-1,-1,-1,-1,},2.318319157456771},
        {{1,1,1,2,-1,-1,-1,-1,},-0.00829336437415229},
        {{1,2,1,0,-1,-1,-1,-1,},7.287670993886414e-05},
        {{1,2,1,1,-1,-1,-1,-1,},-0.008293364374150923},
        {{1,2,1,2,-1,-1,-1,-1,},2.296302969978205},
        {{0,0,0,0,0,0,0,0,},0.310230908236689},
        {{0,0,0,0,0,0,0,2,},-0.02040081079787406},
        {{0,0,0,0,0,1,0,1,},0.1649957094887641},
        {{0,0,0,0,0,2,0,0,},-0.02040081079787409},
        {{0,0,0,0,0,2,0,2,},0.05613648801432609},
        {{0,0,0,1,0,0,0,1,},0.1649957094887641},
        {{0,0,0,1,0,1,0,0,},0.3199430516661581},
        {{0,0,0,1,0,1,0,2,},-0.04610285623537873},
        {{0,0,0,1,0,2,0,1,},-0.08690785254423254},
        {{0,0,0,2,0,0,0,0,},-0.02040081079787408},
        {{0,0,0,2,0,0,0,2,},0.05613648801432616},
        {{0,0,0,2,0,1,0,1,},-0.08690785254423253},
        {{0,0,0,2,0,2,0,0,},0.3020996687680246},
        {{0,0,0,2,0,2,0,2,},0.0388421756046046},
        {{0,1,0,0,0,0,0,1,},0.3199430516661581},
        {{0,1,0,0,0,1,0,0,},0.1649957094887641},
        {{0,1,0,0,0,1,0,2,},-0.08690785254423253},
        {{0,1,0,0,0,2,0,1,},-0.04610285623537869},
        {{0,1,0,1,0,0,0,0,},0.1649957094887641},
        {{0,1,0,1,0,0,0,2,},-0.08690785254423251},
        {{0,1,0,1,0,1,0,1,},0.341496616351396},
        {{0,1,0,1,0,2,0,0,},-0.08690785254423251},
        {{0,1,0,1,0,2,0,2,},0.05379746250312636},
        {{0,1,0,2,0,0,0,1,},-0.04610285623537871},
        {{0,1,0,2,0,1,0,0,},-0.0869078525442325},
        {{0,1,0,2,0,1,0,2,},0.05379746250312634},
        {{0,1,0,2,0,2,0,1,},0.2857723825984251},
        {{0,2,0,0,0,0,0,0,},-0.02040081079787408},
        {{0,2,0,0,0,0,0,2,},0.3020996687680245},
        {{0,2,0,0,0,1,0,1,},-0.08690785254423253},
        {{0,2,0,0,0,2,0,0,},0.05613648801432609},
        {{0,2,0,0,0,2,0,2,},0.03884217560460462},
        {{0,2,0,1,0,0,0,1,},-0.0869078525442325},
        {{0,2,0,1,0,1,0,0,},-0.0461028562353787},
        {{0,2,0,1,0,1,0,2,},0.2857723825984251},
        {{0,2,0,1,0,2,0,1,},0.05379746250312636},
        {{0,2,0,2,0,0,0,0,},0.05613648801432609},
        {{0,2,0,2,0,0,0,2,},0.03884217560460463},
        {{0,2,0,2,0,1,0,1,},0.05379746250312637},
        {{0,2,0,2,0,2,0,0,},0.03884217560460466},
        {{0,2,0,2,0,2,0,2,},0.3751522469301112},
        {{1,0,0,0,0,0,1,0,},-0.6687141479267044},
        {{1,0,0,0,0,0,1,1,},0.00446526329666387},
        {{1,0,0,0,0,0,1,2,},-3.229680505868365e-05},
        {{1,0,0,0,0,2,1,0,},-0.2890102690822565},
        {{1,0,0,0,0,2,1,1,},0.01339990393392575},
        {{1,0,0,0,0,2,1,2,},-0.0001466525217719097},
        {{1,0,0,1,0,1,1,0,},-0.549859726257901},
        {{1,0,0,1,0,1,1,1,},4.887021698342842e-05},
        {{1,0,0,1,0,1,1,2,},-4.255636342531832e-06},
        {{1,0,0,2,0,0,1,0,},-0.2890102690822565},
        {{1,0,0,2,0,0,1,1,},0.01339990393392581},
        {{1,0,0,2,0,0,1,2,},-0.0001466525217719847},
        {{1,0,0,2,0,2,1,0,},-1.172781134823681},
        {{1,0,0,2,0,2,1,1,},0.04029975976479163},
        {{1,0,0,2,0,2,1,2,},-0.0006876411258513396},
        {{1,1,0,0,0,0,1,0,},0.004465263296663829},
        {{1,1,0,0,0,0,1,1,},-0.662920564480286},
        {{1,1,0,0,0,0,1,2,},0.00398779088675575},
        {{1,1,0,0,0,2,1,0,},0.0133999039339255},
        {{1,1,0,0,0,2,1,1,},-0.2720586857035383},
        {{1,1,0,0,0,2,1,2,},0.01098374741513764},
        {{1,1,0,1,0,1,1,0,},4.887021698358933e-05},
        {{1,1,0,1,0,1,1,1,},-0.5497584088097377},
        {{1,1,0,1,0,1,1,2,},0.0001674859973931107},
        {{1,1,0,2,0,0,1,0,},0.01339990393392551},
        {{1,1,0,2,0,0,1,1,},-0.2720586857035381},
        {{1,1,0,2,0,0,1,2,},0.01098374741513768},
        {{1,1,0,2,0,2,1,0,},0.04029975976479199},
        {{1,1,0,2,0,2,1,1,},-1.12298987393253},
        {{1,1,0,2,0,2,1,2,},0.03089541873027372},
        {{1,2,0,0,0,0,1,0,},-3.229680505857517e-05},
        {{1,2,0,0,0,0,1,1,},0.003987790886755767},
        {{1,2,0,0,0,0,1,2,},-0.6174511046264893},
        {{1,2,0,0,0,2,1,0,},-0.0001466525217718661},
        {{1,2,0,0,0,2,1,1,},0.01098374741513701},
        {{1,2,0,0,0,2,1,2,},-0.1631065527740806},
        {{1,2,0,1,0,1,1,0,},-4.255636342637116e-06},
        {{1,2,0,1,0,1,1,1,},0.0001674859973933445},
        {{1,2,0,1,0,1,1,2,},-0.544737399110193},
        {{1,2,0,2,0,0,1,0,},-0.0001466525217718663},
        {{1,2,0,2,0,0,1,1,},0.01098374741513701},
        {{1,2,0,2,0,0,1,2,},-0.1631065527740805},
        {{1,2,0,2,0,2,1,0,},-0.0006876411258516308},
        {{1,2,0,2,0,2,1,1,},0.03089541873027373},
        {{1,2,0,2,0,2,1,2,},-0.840925054659604},
        {{1,0,1,0,1,0,1,0,},2.037462633437517},
        {{1,0,1,0,1,0,1,1,},-0.4407398389016547},
        {{1,0,1,0,1,0,1,2,},0.04709195040220898},
        {{1,0,1,0,1,1,1,0,},-0.4407398389016537},
        {{1,0,1,0,1,1,1,1,},0.2852697244508224},
        {{1,0,1,0,1,1,1,2,},-0.049742204706042},
        {{1,0,1,0,1,2,1,0,},0.04709195040220848},
        {{1,0,1,0,1,2,1,1,},-0.04974220470604185},
        {{1,0,1,0,1,2,1,2,},0.01093429465261846},
        {{1,0,1,1,1,0,1,0,},-0.4407398389016546},
        {{1,0,1,1,1,0,1,1,},0.2852697244508213},
        {{1,0,1,1,1,0,1,2,},-0.04974220470604156},
        {{1,0,1,1,1,1,1,0,},1.672381120350235},
        {{1,0,1,1,1,1,1,1,},-0.3087457452650214},
        {{1,0,1,1,1,1,1,2,},0.03841738648174395},
        {{1,0,1,1,1,2,1,0,},-0.1785199313953152},
        {{1,0,1,1,1,2,1,1,},0.07068060677714871},
        {{1,0,1,1,1,2,1,2,},-0.009278852277055299},
        {{1,0,1,2,1,0,1,0,},0.04709195040220863},
        {{1,0,1,2,1,0,1,1,},-0.04974220470604254},
        {{1,0,1,2,1,0,1,2,},0.01093429465261911},
        {{1,0,1,2,1,1,1,0,},-0.1785199313953163},
        {{1,0,1,2,1,1,1,1,},0.07068060677714479},
        {{1,0,1,2,1,1,1,2,},-0.009278852277051833},
        {{1,0,1,2,1,2,1,0,},0.6554889116024163},
        {{1,0,1,2,1,2,1,1,},-0.01830759997060914},
        {{1,0,1,2,1,2,1,2,},0.002242438833576853},
        {{1,1,1,0,1,0,1,0,},-0.4407398389016544},
        {{1,1,1,0,1,0,1,1,},1.672381120350236},
        {{1,1,1,0,1,0,1,2,},-0.1785199313953167},
        {{1,1,1,0,1,1,1,0,},0.2852697244508238},
        {{1,1,1,0,1,1,1,1,},-0.3087457452650098},
        {{1,1,1,0,1,1,1,2,},0.07068060677714033},
        {{1,1,1,0,1,2,1,0,},-0.04974220470604307},
        {{1,1,1,0,1,2,1,1,},0.03841738648173543},
        {{1,1,1,0,1,2,1,2,},-0.009278852277048971},
        {{1,1,1,1,1,0,1,0,},0.2852697244508237},
        {{1,1,1,1,1,0,1,1,},-0.3087457452650091},
        {{1,1,1,1,1,0,1,2,},0.07068060677714005},
        {{1,1,1,1,1,1,1,0,},-0.308745745265015},
        {{1,1,1,1,1,1,1,1,},1.470228515178179},
        {{1,1,1,1,1,1,1,2,},-0.133923602757185},
        {{1,1,1,1,1,2,1,0,},0.07068060677714327},
        {{1,1,1,1,1,2,1,1,},-0.1339236027571946},
        {{1,1,1,1,1,2,1,2,},0.02694191713338766},
        {{1,1,1,2,1,0,1,0,},-0.04974220470604296},
        {{1,1,1,2,1,0,1,1,},0.03841738648173502},
        {{1,1,1,2,1,0,1,2,},-0.009278852277048782},
        {{1,1,1,2,1,1,1,0,},0.07068060677714294},
        {{1,1,1,2,1,1,1,1,},-0.1339236027571936},
        {{1,1,1,2,1,1,1,2,},0.02694191713338749},
        {{1,1,1,2,1,2,1,0,},-0.01830759997060699},
        {{1,1,1,2,1,2,1,1,},0.642279230300503},
        {{1,1,1,2,1,2,1,2,},-0.01007161628234874},
        {{1,2,1,0,1,0,1,0,},0.04709195040220864},
        {{1,2,1,0,1,0,1,1,},-0.178519931395316},
        {{1,2,1,0,1,0,1,2,},0.6554889116024161},
        {{1,2,1,0,1,1,1,0,},-0.04974220470604236},
        {{1,2,1,0,1,1,1,1,},0.07068060677714311},
        {{1,2,1,0,1,1,1,2,},-0.01830759997060749},
        {{1,2,1,0,1,2,1,0,},0.01093429465261907},
        {{1,2,1,0,1,2,1,1,},-0.009278852277051747},
        {{1,2,1,0,1,2,1,2,},0.00224243883357611},
        {{1,2,1,1,1,0,1,0,},-0.04974220470604236},
        {{1,2,1,1,1,0,1,1,},0.07068060677714312},
        {{1,2,1,1,1,0,1,2,},-0.01830759997060764},
        {{1,2,1,1,1,1,1,0,},0.03841738648173884},
        {{1,2,1,1,1,1,1,1,},-0.1339236027571757},
        {{1,2,1,1,1,1,1,2,},0.6422792303004888},
        {{1,2,1,1,1,2,1,0,},-0.009278852277050997},
        {{1,2,1,1,1,2,1,1,},0.02694191713337898},
        {{1,2,1,1,1,2,1,2,},-0.01007161628234035},
        {{1,2,1,2,1,0,1,0,},0.01093429465261909},
        {{1,2,1,2,1,0,1,1,},-0.009278852277051851},
        {{1,2,1,2,1,0,1,2,},0.002242438833576355},
        {{1,2,1,2,1,1,1,0,},-0.009278852277051004},
        {{1,2,1,2,1,1,1,1,},0.02694191713337882},
        {{1,2,1,2,1,1,1,2,},-0.01007161628234024},
        {{1,2,1,2,1,2,1,0,},0.002242438833575368},
        {{1,2,1,2,1,2,1,1,},-0.01007161628234169},
        {{1,2,1,2,1,2,1,2,},0.5198660835489574}};

    std::vector<std::vector<std::vector<double>>> RDM
        {{{1.99573945023016,1.43856629964743e-08,0.0221270842938037},
          {1.43856629964743e-08,1.99604905944069,-7.79043413373172e-07},
          {0.0221270842938037,-7.79043413373172e-07,0.00821149032915387}},
         {{0.999432938356942,-0.017827548471778,0.0017674307810403},
          {-0.017827548471778,0.000563794660918822,-3.73478115008736e-05},
          {0.0017674307810403,-3.73478115008736e-05,3.26698214054768e-06}}};

    std::vector<std::vector<double>> MutInf
            {{    0.0183460667,    0.0013355130,    0.0149355767,    0.0007703220,    0.0007706595,    0.0000002699},
             {    0.0013355130,    0.0142746700,    0.0128860821,    0.0000101430,    0.0000101362,    0.0000000141},
             {    0.0149355767,    0.0128860821,    0.0299460169,    0.0007837109,    0.0007840622,    0.0000002797},
             {    0.0007703220,    0.0000101430,    0.0007837109,    0.0048057107,    0.0036272786,    0.0000332957},
             {    0.0007706595,    0.0000101362,    0.0007840622,    0.0036272786,    0.0047812823,    0.0000070624},
             {    0.0000002699,    0.0000000141,    0.0000002797,    0.0000332957,    0.0000070624,    0.0000445343}};

    p.set("max_bond_dimension", 100);
    p.set("integrals_binary", maquis::serialize(integrals));
    p.set("L", 6);
    p.set("LATTICE", "preBO lattice");
    p.set("MODEL", "PreBO");
    p.set("optimization", "twosite");
    p.set("PreBO_ParticleTypeVector",        "4 1"   );
    p.set("PreBO_FermionOrBosonVector",      "1 1"   );
    p.set("PreBO_OrbitalVector",             "3 3"   );
    p.set("PreBO_InitialStateVector",        "2 2 1 0" );
    p.set("orbital_order", "'1,2,0,4,3,5'");
    std::vector<int> order = {1,2,0,4,3,5};
    p.set("PreBO_MaxBondDimVector",        "1000 500" );
    p.set("nsweeps",6);
    p.set("symmetry", "nu1");

    std::vector<std::string> optimizer;
    optimizer.push_back("singlesite");
    optimizer.push_back("twosite");

    // Attention: const guess in test, so that the results are deterministic.
    p.set("init_type", "const");
    // Measure RDMs
    p.set("MEASURE[1rdm]","1");
    p.set("MEASURE[mutinf]","1");

    for (auto&& o: optimizer)
    {
        p.set("optimization", o);

        maquis::cout << "Running Pre-BO test for symmetry nu1 with optimization: " << o << std::endl;

        maquis::DMRGInterface<double> interface(p);
        interface.optimize();

        // test energy
        BOOST_CHECK_CLOSE(interface.energy(), -5.66634284989398, 1e-7);

        // test 1-RDM
        const typename maquis::DMRGInterface<double>::meas_with_results_type& meas1 = interface.onerdm();
        for (auto i=0; i<meas1.first.size(); ++i) {
            auto ref = RDM[meas1.first[i][0]][meas1.first[i][1]][meas1.first[i][2]];
            auto val = meas1.second[i];
            auto diff = ref-val;
            BOOST_TEST(diff == 0.0, boost::test_tools::tolerance(1.0E-5));
        }

        const typename maquis::DMRGInterface<double>::meas_with_results_type& meas2 = interface.mutinf();
        for (auto i=0; i<meas2.first.size(); ++i) {
            auto ref = MutInf[order[meas2.first[i][0]]][order[meas2.first[i][1]]];
            auto val = meas2.second[i];
            auto diff = ref-val;
            BOOST_TEST(diff == 0.0, boost::test_tools::tolerance(1.0E-5));
        }

    }


}

